name: Vercel Preview Deployment

on:
  push:
    branches:
      - vercel-preview
  pull_request:
    types: [opened, synchronize]

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID}}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID}}
      APP_ENV: prod

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Render Datasheets
        run: cd ${GITHUB_WORKSPACE}/scripts/datasheet-rendering;./render-datasheets.sh

      - name: Copy Static Files
        run: |
          mkdir -p static/resources/datasheets static/resources/schematics static/resources/pinouts
          find ./content/hardware -type f -name "*-schematics.pdf" -exec cp {} ./static/resources/schematics/ \;
          find ./content/hardware -type f -name "*-datasheet.pdf" -exec cp {} ./static/resources/datasheets/ \;
          find ./content/hardware -type f -name "*-full-pinout.pdf" -exec cp {} ./static/resources/pinouts/ \;
          find ./content/hardware -type f -name "*-pinout.png" -exec cp {} ./static/resources/pinouts/ \;

      - name: Gatsby main cache
        uses: actions/cache@v4
        id: gatsby-cache-folder
        with:
          path: .cache
          key: ${{ runner.os }}-cache-gatsbyV2-vercel-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cache-gatsbyV2-vercel-

      - name: Gatsby Public Folder
        uses: actions/cache@v4
        id: gatsby-public-folder
        with:
          path: public/
          key: ${{ runner.os }}-public-gatsbyV2-vercel-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-public-gatsbyV2-vercel-

      - run: npm install
      - run: npm run build

      - name: Install Vercel CLI
        run: npm install --global vercel@canary
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - uses: UnlyEd/github-action-deploy-on-vercel@latest
        with:
          command: "vercel deploy --archive=tgz --prebuilt --debug --token ${{ secrets.VERCEL_TOKEN }}"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID}}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - run: "echo \"Found deployment url: ${{ env.VERCEL_DEPLOYMENT_URL }}\""
